{"version":3,"file":"static/js/858.9d508ac5.chunk.js","mappings":"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","sources":["api/ExamApi.js","views/pages/exam/ExamWelcomePage.js"],"sourcesContent":["import apiClient from './ApiClient';\r\n\r\nexport const createExam = async (data, token) => {\r\n    const payload = {\r\n        title: data.title,\r\n        description: data.description,\r\n        duration: data.duration,\r\n        start: data.start,\r\n        end: data.end,\r\n        questions: data.questions,\r\n    };\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n    };\r\n    return apiClient.post(`/api/exam/`, payload, { headers });\r\n};\r\n\r\nexport const editExam = async (examId, data, token) => {\r\n    const payload = {\r\n        id: examId,\r\n        title: data.title,\r\n        description: data.description,\r\n        duration: data.duration,\r\n        start: data.start,\r\n        end: data.end,\r\n        questions: data.questions,\r\n        active: data.active,\r\n    };\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n    };\r\n    return apiClient.put(`/api/exam/${examId}`, payload, { headers });\r\n};\r\n\r\nexport const getExamById = async (examId, token) => {\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n    };\r\n    return apiClient.get(`/api/exam/${examId}`, { headers });\r\n};\r\n\r\nexport const listExams = async (token) => {\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n    };\r\n    return apiClient.get(`/api/exam/list`, { headers });\r\n};\r\n\r\nexport const deleteExam = async (examId, token) => {\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n    };\r\n    return apiClient.delete(`/api/exam/${examId}`, { headers });\r\n};\r\n\r\n\r\nexport const updateStatus = async (examId, newStatus, token) => {\r\n    const payload = {\r\n        id: examId,\r\n        active: newStatus,\r\n    };\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n    };\r\n    return apiClient.post(`/api/exam/updateStatus`, payload, { headers });\r\n};\r\n\r\nexport const doExam = async (token) => {\r\n    const headers = { \r\n        Authorization: `Bearer ${token}`,\r\n    };\r\n    return apiClient.get(`/api/submission/`, { headers });\r\n}\r\n\r\nexport const getActiveExam = async (token) => {\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n    };\r\n    return apiClient.get(`/api/exam/`, { headers });\r\n}\r\n\r\nexport const submitExam = async (token, examId, answers, user) => {\r\n    const payload = {\r\n        id: examId,\r\n        answers: answers,\r\n        user : user,\r\n    };\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n    };\r\n    return apiClient.post(`/api/submission/submit`, payload, {headers});\r\n}\r\n\r\nexport const updateShift = async (token, shift) => {\r\n    const payload = {\r\n        shift: shift,\r\n    };\r\n    const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n    };\r\n    return apiClient.post(`/api/submission/shift`, payload, {headers});\r\n}","import { Background } from \"@cloudinary/url-gen/qualifiers\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { doExam } from \"../../../api/ExamApi\";\r\n\r\nconst ExamWelcomePage = () => {\r\n  const [show, setShow] = useState(false);\r\n  const navigate = useNavigate();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const handleLogout = () => {\r\n    navigate(\"/logout\");\r\n  };\r\n\r\n  const startExam = async () => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    try {\r\n      const response = await doExam(token);\r\n      if (response.data.success === false) {\r\n        window.location.href = \"/exam/error\";\r\n      } else {\r\n        if (response.data.msg == \"Failed\") {\r\n          window.location.href = \"/exam/finish\";\r\n        } else {\r\n          window.location.href = \"/exam\";\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        window.location.href = \"/exam/error\";\r\n      } else {\r\n        console.error(\"Error setting up the request:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex justify-content-center align-items-center vh-100 welcomePage\"\r\n      style={{\r\n        background: \"url('/landing-page/images/blndt-2024-no-text.png'\",\r\n      }}\r\n    >\r\n      <div className=\"content text-center bg-white p-5 rounded shadow\">\r\n        <h3>Chào mừng bạn đến với vòng thi Test Online</h3>\r\n        <h4 className=\"mt-3\">CUỘC THI BẢN LĨNH NHÀ ĐẦU TƯ 2024</h4>\r\n\r\n        <p className=\"text-left mt-5\">\r\n          Thể lệ Bài thi gồm 20 câu trắc nghiệm A-B-C-D về các lĩnh vực Kinh tế,\r\n          Tài chính, Chứng khoán... Ở mỗi câu hỏi, các thí sinh chỉ được lựa\r\n          chọn 01 đáp án duy nhất.\r\n        </p>\r\n        <div className=\"text-left \">\r\n          {\" \"}\r\n          <strong>Tổng điểm bài thi:</strong> 20 điểm\r\n        </div>\r\n        <p className=\"text-left \">\r\n          <strong>Thời gian làm bài:</strong> 20 phút.\r\n        </p>\r\n        <p className=\"text-left \">Chúc bạn hoàn thành tốt bài thi của mình!</p>\r\n\r\n        <Button variant=\"primary\" onClick={handleShow} className=\"mt-3 \">\r\n          VÀO THI\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        variant=\"secondary\"\r\n        onClick={handleLogout}\r\n        className=\"position-absolute top-0 end-0 m-3\"\r\n      >\r\n        Đăng xuất\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Thông báo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Bạn có chắc chắn muốn bắt đầu bài thi không? Bài thi chỉ được thực\r\n          hiện một lần duy nhất trong thời gian quy đinh.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Hủy\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={startExam}>\r\n            Bắt đầu thi\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamWelcomePage;\r\n"],"names":["createExam","async","data","token","payload","title","description","duration","start","end","questions","headers","Authorization","apiClient","post","editExam","examId","id","active","put","getExamById","get","listExams","deleteExam","delete","updateStatus","newStatus","doExam","getActiveExam","submitExam","answers","user","updateShift","shift","ExamWelcomePage","show","setShow","useState","navigate","useNavigate","handleClose","_jsxs","className","style","background","children","_jsx","Button","variant","onClick","handleShow","handleLogout","Modal","onHide","centered","Header","closeButton","Title","Body","Footer","localStorage","getItem","response","success","window","location","href","msg","error","console","message"],"sourceRoot":""}