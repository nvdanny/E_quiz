{"version":3,"file":"static/js/406.5286dcc5.chunk.js","mappings":"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","sources":["components/AppSideBarNav.js","_nav.js","components/AppSidebar.js","routes.js","components/AppContent.js","components/AppBreadcrumb.js","components/AppHeader.js","views/pages/UnAuthorized.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar-react/dist/simplebar.min.css'\n\nimport { CBadge, CNavLink, CSidebarNav } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const navLink = (name, icon, badge, indent = false) => {\n    return (\n      <>\n        {icon\n          ? icon\n          : indent && (\n              <span className=\"nav-icon\">\n                <span className=\"nav-icon-bullet\"></span>\n              </span>\n            )}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index, indent = false) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component as=\"div\" key={index}>\n        {rest.to || rest.href ? (\n          <CNavLink {...(rest.to && { as: NavLink })} {...rest}>\n            {navLink(name, icon, badge, indent)}\n          </CNavLink>\n        ) : (\n          navLink(name, icon, badge, indent)\n        )}\n      </Component>\n    )\n  }\n\n  const navGroup = (item, index) => {\n    const { component, name, icon, items, to, ...rest } = item\n    const Component = component\n    return (\n      <Component compact as=\"div\" key={index} toggler={navLink(name, icon)} {...rest}>\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index, true),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <CSidebarNav as={SimpleBar}>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </CSidebarNav>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import {\n  cilLibrary,\n  cilNotes,\n  cilPlus,\n  cilSearch,\n  cilSpeedometer,\n  cilUser\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\nimport React from 'react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/admin',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n  },\n  {\n    component: CNavTitle,\n    name: 'Quản lý đề thi',\n  },\n  {\n    component: CNavItem,\n    name: 'Thêm đề thi',\n    to: '/admin/exam',\n    icon: <CIcon icon={cilPlus} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Xem đề thi',\n    to: '/admin/exam/view',\n    icon: <CIcon icon={cilSearch} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavGroup,\n    name: 'Ngân hàng câu hỏi',\n    to: '/admin/add-question',\n    icon: <CIcon icon={cilLibrary} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Thêm câu hỏi',\n        to: '/admin/add-question'\n      },\n      {\n        component: CNavItem,\n        name: 'Danh sách câu hỏi',\n        to: '/admin/list-question',\n      },\n    ],\n  },\n  {\n    component: CNavTitle,\n    name: 'Quản lý người dùng',\n  },\n  {\n    component: CNavItem,\n    name: 'Danh sách người dùng',\n    to: '/admin/view-users',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Kết quả thi',\n    to: '/admin/view-results',\n    icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n   \n  }\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  CCloseButton,\n  CImage,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarFooter,\n  CSidebarHeader,\n  CSidebarToggler,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSideBarNav.js'\n\nimport { logo } from '../assets/logo.js'\n\n\n// sidebar nav config\nimport navigation from \"../_nav.js\"\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      className=\"border-end\"\n      colorScheme=\"dark\"\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarHeader className=\"border-bottom\">\n        <CSidebarBrand to=\"/\">\n          {/* <CIcon customClassName=\"sidebar-brand-full\" icon={logo} height={32} /> */}\n          <CImage src='/landing-page/images/logo_ba.jpg' customClassName=\"sidebar-brand-full\" alt='' height={42}></CImage>\n          {/* <CIcon customClassName=\"sidebar-brand-narrow\" icon={sygnet} height={32} /> */}\n        </CSidebarBrand>\n        <CCloseButton\n          className=\"d-lg-none\"\n          dark\n          onClick={() => dispatch({ type: 'set', sidebarShow: false })}\n        />\n      </CSidebarHeader>\n      <AppSidebarNav items={navigation} />\n      <CSidebarFooter className=\"border-top d-none d-lg-flex\">\n        <CSidebarToggler\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebarFooter>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/admin/DashBoard'))\nconst AddExam = React.lazy(() => import('./views/admin/AddExam'))\nconst ViewExam = React.lazy(() => import('./views/admin/ViewExam'))\nconst AddQuestion = React.lazy(() => import('./views/admin/AddQuestion'))\nconst ListQuestion = React.lazy(() => import('./views/admin/ListQuestion'))\n// const ViewUsers = React.lazy(() => import('./views/admin/user/ViewUsers'))\n// const ViewResults = React.lazy(() => import('./views/admin/results/ViewResults'))\n\nconst routes = [\n  { path: '/login', exact: true, name: 'Login', element : Dashboard},\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/exam', name: 'Thêm đề thi', element: AddExam },\n  { path: '/exam/:examId', name: 'Sửa đề thi', element: AddExam },\n  { path: '/exam/view', name: 'Xem đề thi', element: ViewExam },\n  {\n    path: '/add-question/:questionId',\n    name: 'Sửa câu hỏi',\n    element: AddQuestion\n  },\n  {\n    path: '/add-question/',\n    name: 'Thêm câu hỏi',\n    element: AddQuestion\n  },\n  { path: '/list-question', name: 'Ngân hàng câu hỏi', element: ListQuestion ,},\n//   { path: '/admin/view-users', name: 'Danh sách người dùng', element: ViewUsers },\n//   { path: '/admin/view-results', name: 'Kết quả thi', element: ViewResults },\n]\n\nexport default routes\n","import React, { Suspense } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { CContainer, CSpinner } from '@coreui/react';\n\n// cấu hình routes\nimport routes from '../routes';\n\nconst AppContent = () => {\n  const token = localStorage.getItem('accessToken'); // Lấy token\n\n  return (\n    <CContainer className=\"px-4\" lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            const Component = route.element; // Đảm bảo đây là một thành phần\n            return (\n              <Route\n                key={idx}\n                path={route.path}\n                exact={route.exact}\n                name={route.name}\n                element={\n                  <Component token={token} /> // Truyền token như một thuộc tính\n                }\n              />\n            );\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  );\n};\n\nexport default React.memo(AppContent);\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"my-0\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { useEffect, useRef } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CHeader,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  useColorModes,\n  CTooltip,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilAccountLogout,\n  cilBell,\n  cilContrast,\n  cilEnvelopeOpen,\n  cilList,\n  cilMenu,\n  cilMoon,\n  cilSun,\n} from '@coreui/icons'\n\nimport AppBreadcrumb from './AppBreadcrumb'\n\nconst AppHeader = () => {\n  const headerRef = useRef()\n  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      headerRef.current &&\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\n    })\n  }, [])\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n      <CContainer className=\"border-bottom px-4\" fluid>\n        <CHeaderToggler\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n          style={{ marginInlineStart: '-14px' }}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"d-none d-md-flex\">\n          <CNavItem>\n            <CNavLink to=\"./dashboard\" as={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"./view-users\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"./exam/view\">Exam</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-auto\">\n          \n        </CHeaderNav>\n        <CHeaderNav>\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\n            <CDropdownToggle caret={false}>\n              {colorMode === 'dark' ? (\n                <CIcon icon={cilMoon} size=\"lg\" />\n              ) : colorMode === 'auto' ? (\n                <CIcon icon={cilContrast} size=\"lg\" />\n              ) : (\n                <CIcon icon={cilSun} size=\"lg\" />\n              )}\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <CDropdownItem\n                active={colorMode === 'light'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('light')}\n              >\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\n              </CDropdownItem>\n              <CDropdownItem\n                active={colorMode === 'dark'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('dark')}\n              >\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\n              </CDropdownItem>\n              <CDropdownItem\n                active={colorMode === 'auto'}\n                className=\"d-flex align-items-center\"\n                as=\"button\"\n                type=\"button\"\n                onClick={() => setColorMode('auto')}\n              >\n                <CIcon className=\"me-2\" icon={cilContrast} size=\"lg\" /> Auto\n              </CDropdownItem>\n            </CDropdownMenu>\n          </CDropdown>\n          <CNavItem>\n          <CTooltip content=\"Đăng xuất\" placement=\"bottom\">\n            <CNavLink href=\"/logout\">\n              <CIcon icon={cilAccountLogout} />\n            </CNavLink>\n          </CTooltip>\n          </CNavItem>\n        </CHeaderNav>\n      </CContainer>\n      <CContainer className=\"px-4\" fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport {\n  CButton,\n  CCol,\n  CContainer,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMagnifyingGlass } from '@coreui/icons'\nimport { Link } from 'react-router-dom'\n\nconst UnAuthorized = () => {\n  return (\n    <div className=\"bg-body-tertiary min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={6}>\n            <span className=\"clearfix\">\n              <h1 className=\"float-start display-3 me-4\">403</h1>\n              <h4 className=\"pt-3\">Houston, we have a problem!</h4>\n              <p className=\"text-body-secondary float-start\">\n                Bạn không có quyền truy cập trang web này. Vui lòng đăng nhập với tư cách Admin\n              </p>\n            </span>\n            <Link to={'/logout'} style={{marginY:\"auto\"}}>\n                Đăng nhập với trang Admin\n            </Link>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default UnAuthorized\n","import React, { useEffect } from 'react';\nimport AppSidebar from '../components/AppSidebar';\nimport AppContent from '../components/AppContent';\nimport AppHeader from '../components/AppHeader';\nimport { useNavigate } from 'react-router-dom';\nimport UnAuthorized from '../views/pages/UnAuthorized';\n\nconst DefaultLayout = () => {\n  const navigate = useNavigate();\n  const userInfo = localStorage.getItem('userInfo');\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login');\n    }\n  }, [userInfo, navigate]);\n\n  if (!userInfo) {\n    return null; \n  }\n\n  const userRole = JSON.parse(userInfo).role;\n\n  if (userRole === 'admin') {\n    return (\n      <div>\n        <AppSidebar />\n        <div className=\"wrapper d-flex flex-column min-vh-100 ml-2\">\n          <AppHeader />\n          <div className=\"body flex-grow-1\">\n            <AppContent />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <UnAuthorized />;\n  }\n};\n\nexport default DefaultLayout;\n"],"names":["AppSidebarNav","_ref","items","navLink","name","icon","badge","indent","arguments","length","undefined","_jsxs","_Fragment","children","_jsx","className","CBadge","color","text","navItem","item","index","component","rest","Component","as","to","href","CNavLink","NavLink","navGroup","_item$items","compact","toggler","map","CSidebarNav","SimpleBar","CNavItem","CIcon","cilSpeedometer","customClassName","CNavTitle","cilPlus","cilSearch","CNavGroup","cilLibrary","cilUser","cilNotes","AppSidebar","dispatch","useDispatch","unfoldable","useSelector","state","sidebarUnfoldable","sidebarShow","CSidebar","colorScheme","position","visible","onVisibleChange","type","CSidebarHeader","CSidebarBrand","CImage","src","alt","height","CCloseButton","dark","onClick","navigation","CSidebarFooter","CSidebarToggler","React","Dashboard","AddExam","ViewExam","AddQuestion","path","exact","element","AppContent","token","localStorage","getItem","CContainer","lg","Suspense","fallback","CSpinner","Routes","routes","route","idx","Route","Navigate","replace","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","array","currentPathname","concat","routeName","getRouteName","currentRoute","find","push","active","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","breadcrumb","_createElement","key","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","ref","fluid","CHeaderToggler","style","marginInlineStart","cilMenu","size","CHeaderNav","CDropdown","variant","placement","CDropdownToggle","caret","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","CTooltip","content","cilAccountLogout","UnAuthorized","CRow","CCol","md","Link","marginY","DefaultLayout","navigate","useNavigate","userInfo","JSON","parse","role"],"sourceRoot":""}