{"version":3,"file":"static/js/406.a0b54a18.chunk.js","mappings":"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","sources":["components/AppSideBarNav.js","_nav.js","components/AppSidebar.js","routes.js","components/AppContent.js","components/AppBreadcrumb.js","components/AppHeader.js","views/pages/UnAuthorized.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar-react/dist/simplebar.min.css'\r\n\r\nimport { CBadge, CNavLink, CSidebarNav } from '@coreui/react'\r\n\r\nexport const AppSidebarNav = ({ items }) => {\r\n  const navLink = (name, icon, badge, indent = false) => {\r\n    return (\r\n      <>\r\n        {icon\r\n          ? icon\r\n          : indent && (\r\n              <span className=\"nav-icon\">\r\n                <span className=\"nav-icon-bullet\"></span>\r\n              </span>\r\n            )}\r\n        {name && name}\r\n        {badge && (\r\n          <CBadge color={badge.color} className=\"ms-auto\">\r\n            {badge.text}\r\n          </CBadge>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const navItem = (item, index, indent = false) => {\r\n    const { component, name, badge, icon, ...rest } = item\r\n    const Component = component\r\n    return (\r\n      <Component as=\"div\" key={index}>\r\n        {rest.to || rest.href ? (\r\n          <CNavLink {...(rest.to && { as: NavLink })} {...rest}>\r\n            {navLink(name, icon, badge, indent)}\r\n          </CNavLink>\r\n        ) : (\r\n          navLink(name, icon, badge, indent)\r\n        )}\r\n      </Component>\r\n    )\r\n  }\r\n\r\n  const navGroup = (item, index) => {\r\n    const { component, name, icon, items, to, ...rest } = item\r\n    const Component = component\r\n    return (\r\n      <Component compact as=\"div\" key={index} toggler={navLink(name, icon)} {...rest}>\r\n        {item.items?.map((item, index) =>\r\n          item.items ? navGroup(item, index) : navItem(item, index, true),\r\n        )}\r\n      </Component>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CSidebarNav as={SimpleBar}>\r\n      {items &&\r\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\r\n    </CSidebarNav>\r\n  )\r\n}\r\n\r\nAppSidebarNav.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n}\r\n","import {\r\n  cilLibrary,\r\n  cilNotes,\r\n  cilPlus,\r\n  cilSearch,\r\n  cilSpeedometer,\r\n  cilUser\r\n} from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\r\nimport React from 'react'\r\n\r\nconst _nav = [\r\n  {\r\n    component: CNavItem,\r\n    name: 'Dashboard',\r\n    to: '/admin',\r\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\r\n    badge: {\r\n      color: 'info',\r\n      text: 'NEW',\r\n    },\r\n  },\r\n  {\r\n    component: CNavTitle,\r\n    name: 'Quản lý đề thi',\r\n  },\r\n  {\r\n    component: CNavItem,\r\n    name: 'Thêm đề thi',\r\n    to: '/admin/exam',\r\n    icon: <CIcon icon={cilPlus} customClassName=\"nav-icon\" />,\r\n  },\r\n  {\r\n    component: CNavItem,\r\n    name: 'Xem đề thi',\r\n    to: '/admin/exam/view',\r\n    icon: <CIcon icon={cilSearch} customClassName=\"nav-icon\" />,\r\n  },\r\n  {\r\n    component: CNavGroup,\r\n    name: 'Ngân hàng câu hỏi',\r\n    to: '/admin/add-question',\r\n    icon: <CIcon icon={cilLibrary} customClassName=\"nav-icon\" />,\r\n    items: [\r\n      {\r\n        component: CNavItem,\r\n        name: 'Thêm câu hỏi',\r\n        to: '/admin/add-question'\r\n      },\r\n      {\r\n        component: CNavItem,\r\n        name: 'Danh sách câu hỏi',\r\n        to: '/admin/list-question',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    component: CNavTitle,\r\n    name: 'Quản lý người dùng',\r\n  },\r\n  {\r\n    component: CNavItem,\r\n    name: 'Danh sách người dùng',\r\n    to: '/admin/view-users',\r\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\r\n  },\r\n  {\r\n    component: CNavItem,\r\n    name: 'Kết quả thi',\r\n    to: '/admin/view-results',\r\n    icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\r\n   \r\n  }\r\n]\r\n\r\nexport default _nav\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  CCloseButton,\r\n  CImage,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarFooter,\r\n  CSidebarHeader,\r\n  CSidebarToggler,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { AppSidebarNav } from './AppSideBarNav.js'\r\n\r\nimport { logo } from '../assets/logo.js'\r\n\r\n\r\n// sidebar nav config\r\nimport navigation from \"../_nav.js\"\r\n\r\nconst AppSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\r\n  const sidebarShow = useSelector((state) => state.sidebarShow)\r\n\r\n  return (\r\n    <CSidebar\r\n      className=\"border-end\"\r\n      colorScheme=\"dark\"\r\n      position=\"fixed\"\r\n      unfoldable={unfoldable}\r\n      visible={sidebarShow}\r\n      onVisibleChange={(visible) => {\r\n        dispatch({ type: 'set', sidebarShow: visible })\r\n      }}\r\n    >\r\n      <CSidebarHeader className=\"border-bottom\">\r\n        <CSidebarBrand to=\"/\">\r\n          {/* <CIcon customClassName=\"sidebar-brand-full\" icon={logo} height={32} /> */}\r\n          <CImage src='/landing-page/images/logo_ba.jpg' alt='' height={42}></CImage>\r\n          {/* <CIcon customClassName=\"sidebar-brand-narrow\" icon={sygnet} height={32} /> */}\r\n        </CSidebarBrand>\r\n        <CCloseButton\r\n          className=\"d-lg-none\"\r\n          dark\r\n          onClick={() => dispatch({ type: 'set', sidebarShow: false })}\r\n        />\r\n      </CSidebarHeader>\r\n      <AppSidebarNav items={navigation} />\r\n      <CSidebarFooter className=\"border-top d-none d-lg-flex\">\r\n        <CSidebarToggler\r\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\r\n        />\r\n      </CSidebarFooter>\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppSidebar)\r\n","import React from 'react'\r\n\r\nconst Dashboard = React.lazy(() => import('./views/admin/DashBoard'))\r\nconst AddExam = React.lazy(() => import('./views/admin/AddExam'))\r\nconst ViewExam = React.lazy(() => import('./views/admin/ViewExam'))\r\nconst AddQuestion = React.lazy(() => import('./views/admin/AddQuestion'))\r\nconst ListQuestion = React.lazy(() => import('./views/admin/ListQuestion'))\r\n// const ViewUsers = React.lazy(() => import('./views/admin/user/ViewUsers'))\r\n// const ViewResults = React.lazy(() => import('./views/admin/results/ViewResults'))\r\n\r\nconst routes = [\r\n  { path: '/login', exact: true, name: 'Login', element : Dashboard},\r\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\r\n  { path: '/exam', name: 'Thêm đề thi', element: AddExam },\r\n  { path: '/exam/:examId', name: 'Sửa đề thi', element: AddExam },\r\n  { path: '/exam/view', name: 'Xem đề thi', element: ViewExam },\r\n  {\r\n    path: '/add-question/:questionId',\r\n    name: 'Sửa câu hỏi',\r\n    element: AddQuestion\r\n  },\r\n  {\r\n    path: '/add-question/',\r\n    name: 'Thêm câu hỏi',\r\n    element: AddQuestion\r\n  },\r\n  { path: '/list-question', name: 'Ngân hàng câu hỏi', element: ListQuestion ,},\r\n//   { path: '/admin/view-users', name: 'Danh sách người dùng', element: ViewUsers },\r\n//   { path: '/admin/view-results', name: 'Kết quả thi', element: ViewResults },\r\n]\r\n\r\nexport default routes\r\n","import React, { Suspense } from 'react';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport { CContainer, CSpinner } from '@coreui/react';\r\n\r\n// cấu hình routes\r\nimport routes from '../routes';\r\n\r\nconst AppContent = () => {\r\n  const token = localStorage.getItem('accessToken'); // Lấy token\r\n\r\n  return (\r\n    <CContainer className=\"px-4\" lg>\r\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\r\n        <Routes>\r\n          {routes.map((route, idx) => {\r\n            const Component = route.element; // Đảm bảo đây là một thành phần\r\n            return (\r\n              <Route\r\n                key={idx}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                name={route.name}\r\n                element={\r\n                  <Component token={token} /> // Truyền token như một thuộc tính\r\n                }\r\n              />\r\n            );\r\n          })}\r\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </CContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppContent);\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport routes from '../routes'\r\n\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst AppBreadcrumb = () => {\r\n  const currentLocation = useLocation().pathname\r\n\r\n  const getRouteName = (pathname, routes) => {\r\n    const currentRoute = routes.find((route) => route.path === pathname)\r\n    return currentRoute ? currentRoute.name : false\r\n  }\r\n\r\n  const getBreadcrumbs = (location) => {\r\n    const breadcrumbs = []\r\n    location.split('/').reduce((prev, curr, index, array) => {\r\n      const currentPathname = `${prev}/${curr}`\r\n      const routeName = getRouteName(currentPathname, routes)\r\n      routeName &&\r\n        breadcrumbs.push({\r\n          pathname: currentPathname,\r\n          name: routeName,\r\n          active: index + 1 === array.length ? true : false,\r\n        })\r\n      return currentPathname\r\n    })\r\n    return breadcrumbs\r\n  }\r\n\r\n  const breadcrumbs = getBreadcrumbs(currentLocation)\r\n\r\n  return (\r\n    <CBreadcrumb className=\"my-0\">\r\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\r\n      {breadcrumbs.map((breadcrumb, index) => {\r\n        return (\r\n          <CBreadcrumbItem\r\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\r\n            key={index}\r\n          >\r\n            {breadcrumb.name}\r\n          </CBreadcrumbItem>\r\n        )\r\n      })}\r\n    </CBreadcrumb>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppBreadcrumb)\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CContainer,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CHeader,\r\n  CHeaderNav,\r\n  CHeaderToggler,\r\n  CNavLink,\r\n  CNavItem,\r\n  useColorModes,\r\n  CTooltip,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  cilAccountLogout,\r\n  cilBell,\r\n  cilContrast,\r\n  cilEnvelopeOpen,\r\n  cilList,\r\n  cilMenu,\r\n  cilMoon,\r\n  cilSun,\r\n} from '@coreui/icons'\r\n\r\nimport AppBreadcrumb from './AppBreadcrumb'\r\n\r\nconst AppHeader = () => {\r\n  const headerRef = useRef()\r\n  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')\r\n\r\n  const dispatch = useDispatch()\r\n  const sidebarShow = useSelector((state) => state.sidebarShow)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', () => {\r\n      headerRef.current &&\r\n        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\r\n      <CContainer className=\"border-bottom px-4\" fluid>\r\n        <CHeaderToggler\r\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\r\n          style={{ marginInlineStart: '-14px' }}\r\n        >\r\n          <CIcon icon={cilMenu} size=\"lg\" />\r\n        </CHeaderToggler>\r\n        <CHeaderNav className=\"d-none d-md-flex\">\r\n          <CNavItem>\r\n            <CNavLink to=\"./dashboard\" as={NavLink}>\r\n              Dashboard\r\n            </CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink href=\"./view-users\">Users</CNavLink>\r\n          </CNavItem>\r\n          <CNavItem>\r\n            <CNavLink href=\"./exam/view\">Exam</CNavLink>\r\n          </CNavItem>\r\n        </CHeaderNav>\r\n        <CHeaderNav className=\"ms-auto\">\r\n          \r\n        </CHeaderNav>\r\n        <CHeaderNav>\r\n          <CDropdown variant=\"nav-item\" placement=\"bottom-end\">\r\n            <CDropdownToggle caret={false}>\r\n              {colorMode === 'dark' ? (\r\n                <CIcon icon={cilMoon} size=\"lg\" />\r\n              ) : colorMode === 'auto' ? (\r\n                <CIcon icon={cilContrast} size=\"lg\" />\r\n              ) : (\r\n                <CIcon icon={cilSun} size=\"lg\" />\r\n              )}\r\n            </CDropdownToggle>\r\n            <CDropdownMenu>\r\n              <CDropdownItem\r\n                active={colorMode === 'light'}\r\n                className=\"d-flex align-items-center\"\r\n                as=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setColorMode('light')}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\r\n              </CDropdownItem>\r\n              <CDropdownItem\r\n                active={colorMode === 'dark'}\r\n                className=\"d-flex align-items-center\"\r\n                as=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setColorMode('dark')}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\r\n              </CDropdownItem>\r\n              <CDropdownItem\r\n                active={colorMode === 'auto'}\r\n                className=\"d-flex align-items-center\"\r\n                as=\"button\"\r\n                type=\"button\"\r\n                onClick={() => setColorMode('auto')}\r\n              >\r\n                <CIcon className=\"me-2\" icon={cilContrast} size=\"lg\" /> Auto\r\n              </CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n          <CNavItem>\r\n          <CTooltip content=\"Đăng xuất\" placement=\"bottom\">\r\n            <CNavLink href=\"/logout\">\r\n              <CIcon icon={cilAccountLogout} />\r\n            </CNavLink>\r\n          </CTooltip>\r\n          </CNavItem>\r\n        </CHeaderNav>\r\n      </CContainer>\r\n      <CContainer className=\"px-4\" fluid>\r\n        <AppBreadcrumb />\r\n      </CContainer>\r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CContainer,\r\n  CFormInput,\r\n  CInputGroup,\r\n  CInputGroupText,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilMagnifyingGlass } from '@coreui/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UnAuthorized = () => {\r\n  return (\r\n    <div className=\"bg-body-tertiary min-vh-100 d-flex flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={6}>\r\n            <span className=\"clearfix\">\r\n              <h1 className=\"float-start display-3 me-4\">403</h1>\r\n              <h4 className=\"pt-3\">Houston, we have a problem!</h4>\r\n              <p className=\"text-body-secondary float-start\">\r\n                Bạn không có quyền truy cập trang web này. Vui lòng đăng nhập với tư cách Admin\r\n              </p>\r\n            </span>\r\n            <Link to={'/logout'} style={{marginY:\"auto\"}}>\r\n                Đăng nhập với trang Admin\r\n            </Link>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnAuthorized\r\n","import React, { useEffect } from 'react';\r\nimport AppSidebar from '../components/AppSidebar';\r\nimport AppContent from '../components/AppContent';\r\nimport AppHeader from '../components/AppHeader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UnAuthorized from '../views/pages/UnAuthorized';\r\n\r\nconst DefaultLayout = () => {\r\n  const navigate = useNavigate();\r\n  const userInfo = localStorage.getItem('userInfo');\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login');\r\n    }\r\n  }, [userInfo, navigate]);\r\n\r\n  if (!userInfo) {\r\n    return null; \r\n  }\r\n\r\n  const userRole = JSON.parse(userInfo).role;\r\n\r\n  if (userRole === 'admin') {\r\n    return (\r\n      <div>\r\n        <AppSidebar />\r\n        <div className=\"wrapper d-flex flex-column min-vh-100 ml-2\">\r\n          <AppHeader />\r\n          <div className=\"body flex-grow-1\">\r\n            <AppContent />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <UnAuthorized />;\r\n  }\r\n};\r\n\r\nexport default DefaultLayout;\r\n"],"names":["AppSidebarNav","_ref","items","navLink","name","icon","badge","indent","arguments","length","undefined","_jsxs","_Fragment","children","_jsx","className","CBadge","color","text","navItem","item","index","component","rest","Component","as","to","href","CNavLink","NavLink","navGroup","_item$items","compact","toggler","map","CSidebarNav","SimpleBar","CNavItem","CIcon","cilSpeedometer","customClassName","CNavTitle","cilPlus","cilSearch","CNavGroup","cilLibrary","cilUser","cilNotes","AppSidebar","dispatch","useDispatch","unfoldable","useSelector","state","sidebarUnfoldable","sidebarShow","CSidebar","colorScheme","position","visible","onVisibleChange","type","CSidebarHeader","CSidebarBrand","CImage","src","alt","height","CCloseButton","dark","onClick","navigation","CSidebarFooter","CSidebarToggler","React","Dashboard","AddExam","ViewExam","AddQuestion","path","exact","element","AppContent","token","localStorage","getItem","CContainer","lg","Suspense","fallback","CSpinner","Routes","routes","route","idx","Route","Navigate","replace","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","array","currentPathname","routeName","getRouteName","currentRoute","find","push","active","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","breadcrumb","_createElement","key","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","useEffect","document","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","ref","fluid","CHeaderToggler","style","marginInlineStart","cilMenu","size","CHeaderNav","CDropdown","variant","placement","CDropdownToggle","caret","cilMoon","cilContrast","cilSun","CDropdownMenu","CDropdownItem","CTooltip","content","cilAccountLogout","UnAuthorized","CRow","CCol","md","Link","marginY","DefaultLayout","navigate","useNavigate","userInfo","JSON","parse","role"],"sourceRoot":""}